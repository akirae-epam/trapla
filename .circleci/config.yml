# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.1-node-browsers
         environment:
           RAILS_ENV: test
           MYSQL_ROOT_HOST: '%'
           DB_HOST: 127.0.0.1
           DB_USERNAME: 'root'
           DB_PASSWORD: ''
       - image: circleci/mysql:5.7.10-ram
         environment:
           MYSQL_ALLOW_EMPTY_PASSWORD: yes

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: sudo apt-get update
      - run: sudo apt-get install -y g++ qt5-default libqt5webkit5-dev gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x
      - run: sudo apt-get install -f

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
         name: 'wait for db'
         command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run mini tests!
      - run:
          name: run tests
          command: |
            bundle exec rake test

      # run spec tests!
      - run:
          name: run spec
          command: |
            xvfb-run -a bundle exec rspec

      # run rubocop
      - run:
          name: run rubocop
          command: |
            bundle exec rubocop

      # run scss-linter
      - run:
          name: run scss-linter
          command: |
            bundle exec scss-lint

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
